{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../Nav.svelte",
    "../_error.svelte",
    "../_layout.svelte",
    "../about.svelte",
    "../[slug].svelte",
    "../index.svelte",
    "../index.svelte"
  ],
  "sourcesContent": [
    "<script>\n  export let segment\n</script>\n\n<nav>\n  <ul class=\"flex\">\n    <li>\n      <a class={segment === undefined ? 'selected' : ''} href=\".\">home</a>\n    </li>\n    <li>\n      <a class={segment === 'about' ? 'selected' : ''} href=\"about\">about</a>\n    </li>\n\n    <!-- for the blog link, we're using rel=prefetch so that Sapper prefetches\n\t\t     the blog data when we hover over the link or tap it on a touchscreen -->\n    <li>\n      <a\n        rel=\"prefetch\"\n        class={segment === 'blog' ? 'selected' : ''}\n        href=\"blog\"\n      >\n        blog\n      </a>\n    </li>\n  </ul>\n</nav>\n\n<style type=\"text/postcss\">nav {\n  font-weight: 300;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  border-bottom-width: 1px;\n  border-color: #f6ad55;\n}\n\n.selected {\n  position: relative;\n  display: inline-block;\n}\n\n.selected::after {\n  background-color: #dd6b20;\n  position: absolute;\n  content: '';\n  width: calc(100% - 1em);\n  height: 2px;\n  display: block;\n  bottom: -1px;\n}\n\na {\n  text-decoration: none;\n  padding: 1em 0.5em;\n  display: block;\n}</style>\n",
    "<script>\n  export let status\n  export let error\n\n  const dev = \"development\" === 'development'\n</script>\n\n<svelte:head>\n  <title>{status}</title>\n</svelte:head>\n\n<h1>{status}</h1>\n\n<p>{error.message}</p>\n\n{#if dev && error.stack}\n  <pre>{error.stack}</pre>\n{/if}\n\n<style>h1,\np {\n  margin: 0 auto;\n}\n\nh1 {\n  font-size: 2.8em;\n  font-weight: 700;\n  margin: 0 0 0.5em 0;\n}\n\np {\n  margin: 1em auto;\n}\n\n@media (min-width: 480px) {\n  h1 {\n    font-size: 4em;\n  }\n}</style>\n",
    "<script>\n  import Nav from '../components/Nav.svelte'\n\n  export let segment\n</script>\n\n<Nav {segment} />\n\n<main class=\"test-apply relative\">\n  <slot />\n</main>\n\n<style type=\"text/postcss\">.test-apply {\n  width: 60%;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 2rem;\n}</style>\n",
    "<script>\n  let test = true\n</script>\n\n<svelte:head>\n  <title>About</title>\n</svelte:head>\n\n<h1 class=\"font-thin text-6xl text-orange-600 uppercase leading-none\">\n  About this site\n</h1>\n\n<p class=\"about\" class:border-orange-500={test}>\n  This is the 'about' page. There's not much here.\n</p>\n\n<style type=\"text/postcss\">.about {\n  padding-left: 1rem;\n  border-left-width: 4px;\n}</style>\n",
    "<script context=\"module\">\n  export async function preload({ params, query }) {\n    // the `slug` parameter is available because\n    // this file is called [slug].svelte\n    const res = await this.fetch(`blog/${params.slug}.json`)\n    const data = await res.json()\n\n    if (res.status === 200) {\n      return { post: data }\n    } else {\n      this.error(res.status, data.message)\n    }\n  }\n</script>\n\n<script>\n  export let post\n</script>\n\n<svelte:head>\n  <title>{post.title}</title>\n</svelte:head>\n\n<h1>{post.title}</h1>\n\n<div class=\"content\">\n  {@html post.html}\n</div>\n\n<style>/*\n\tBy default, CSS is locally scoped to the component,\n\tand any unused styles are dead-code-eliminated.\n\tIn this page, Svelte can't know which elements are\n\tgoing to appear inside the {{{post.html}}} block,\n\tso we have to use the :global(...) modifier to target\n\tall elements inside .content\n*/\n\n.content :global(h2) {\n  font-size: 1.4em;\n  font-weight: 500;\n}\n\n.content :global(pre) {\n  background-color: #f9f9f9;\n  box-shadow: inset 1px 1px 5px rgba(0, 0, 0, 0.05);\n  padding: 0.5em;\n  border-radius: 2px;\n  overflow-x: auto;\n}\n\n.content :global(pre) :global(code) {\n  background-color: transparent;\n  padding: 0;\n}\n\n.content :global(ul) {\n  line-height: 1.5;\n}\n\n.content :global(li) {\n  margin: 0 0 0.5em 0;\n}</style>\n",
    "<script context=\"module\">\n  export function preload({ params, query }) {\n    return this.fetch(`blog.json`)\n      .then((r) => r.json())\n      .then((posts) => {\n        return { posts }\n      })\n  }\n</script>\n\n<script>\n  export let posts\n</script>\n\n<svelte:head>\n  <title>Blog</title>\n</svelte:head>\n\n<h1>Recent posts</h1>\n\n<ul>\n  {#each posts as post}\n    <!-- we're using the non-standard `rel=prefetch` attribute to\n\t\t\t\ttell Sapper to load the data for the page as soon as\n\t\t\t\tthe user hovers over the link or taps it, instead of\n\t\t\t\twaiting for the 'click' event -->\n    <li>\n      <a rel=\"prefetch\" href=\"blog/{post.slug}\">{post.title}</a>\n    </li>\n  {/each}\n</ul>\n\n<style>ul {\n  margin: 0 0 1em 0;\n  line-height: 1.5;\n}</style>\n",
    "<svelte:head>\n  <title>Sapper project template</title>\n</svelte:head>\n\n<div class=\"test-apply flex flex-col items-center\">\n\n  <h1 class=\"font-thin text-6xl text-orange-600 uppercase leading-none\">\n    Great success!\n  </h1>\n\n  <figure class=\"w-2/3\">\n    <img class=\"w-full object-cover\" alt=\"\" src=\"rey.jpg\" />\n    <figcaption>HIGH FIVE!</figcaption>\n  </figure>\n\n  <p>\n    <strong>\n      Try editing this file\n      <span class=\"text-orange-600\">(src/routes/index.svelte)</span>\n      to test live reloading.\n    </strong>\n  </p>\n</div>\n\n<style type=\"text/postcss\">img {\n  height: 450px;\n}</style>\n"
  ],
  "names": [],
  "mappings": "AA2B2B,GAAG,cAAC,CAAC,AAC9B,WAAW,CAAE,GAAG,CAChB,YAAY,CAAE,IAAI,CAClB,aAAa,CAAE,IAAI,CACnB,mBAAmB,CAAE,GAAG,CACxB,YAAY,CAAE,OAAO,AACvB,CAAC,AAED,SAAS,cAAC,CAAC,AACT,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,YAAY,AACvB,CAAC,AAED,uBAAS,OAAO,AAAC,CAAC,AAChB,gBAAgB,CAAE,OAAO,CACzB,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,EAAE,CACX,KAAK,CAAE,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CACvB,MAAM,CAAE,GAAG,CACX,OAAO,CAAE,KAAK,CACd,MAAM,CAAE,IAAI,AACd,CAAC,AAED,CAAC,cAAC,CAAC,AACD,eAAe,CAAE,IAAI,CACrB,OAAO,CAAE,GAAG,CAAC,KAAK,CAClB,OAAO,CAAE,KAAK,AAChB,CAAC;ACnCM,gBAAE,CACT,CAAC,cAAC,CAAC,AACD,MAAM,CAAE,CAAC,CAAC,IAAI,AAChB,CAAC,AAED,EAAE,cAAC,CAAC,AACF,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,GAAG,CAChB,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,AACrB,CAAC,AAED,CAAC,cAAC,CAAC,AACD,MAAM,CAAE,GAAG,CAAC,IAAI,AAClB,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,EAAE,cAAC,CAAC,AACF,SAAS,CAAE,GAAG,AAChB,CAAC,AACH,CAAC;AC1B0B,WAAW,eAAC,CAAC,AACtC,KAAK,CAAE,GAAG,CACV,WAAW,CAAE,IAAI,CACjB,YAAY,CAAE,IAAI,CAClB,OAAO,CAAE,IAAI,AACf,CAAC;ACD0B,MAAM,eAAC,CAAC,AACjC,YAAY,CAAE,IAAI,CAClB,iBAAiB,CAAE,GAAG,AACxB,CAAC;ACmBD,sBAAQ,CAAC,AAAQ,EAAE,AAAE,CAAC,AACpB,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,GAAG,AAClB,CAAC,AAED,sBAAQ,CAAC,AAAQ,GAAG,AAAE,CAAC,AACrB,gBAAgB,CAAE,OAAO,CACzB,UAAU,CAAE,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CACjD,OAAO,CAAE,KAAK,CACd,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,IAAI,AAClB,CAAC,AAED,sBAAQ,CAAC,AAAQ,GAAG,AAAC,CAAC,AAAQ,IAAI,AAAE,CAAC,AACnC,gBAAgB,CAAE,WAAW,CAC7B,OAAO,CAAE,CAAC,AACZ,CAAC,AAED,sBAAQ,CAAC,AAAQ,EAAE,AAAE,CAAC,AACpB,WAAW,CAAE,GAAG,AAClB,CAAC,AAED,sBAAQ,CAAC,AAAQ,EAAE,AAAE,CAAC,AACpB,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,AACrB,CAAC;AC9BM,EAAE,cAAC,CAAC,AACT,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CACjB,WAAW,CAAE,GAAG,AAClB,CAAC;ACX0B,GAAG,eAAC,CAAC,AAC9B,MAAM,CAAE,KAAK,AACf,CAAC"
}